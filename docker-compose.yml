version: '3.8'

services:
  api:
    build:
      context: ../
      dockerfile: ./docker-setup/php/Dockerfile
    container_name: api
    volumes:
      - ../emr-php:/var/www/html # Mount local PHP code to the container for dev only
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - db
      - redis
    restart: unless-stopped
    #environment:
      #- DB_DATABASE=your_database_name in case need to overwrite any env inside that container u can easly do from here 
      #- DB_USERNAME=your_db_username
      #- DB_PASSWORD=your_db_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 10s

  webserver:
    image: nginx:stable-alpine
    container_name: api-web
    ports:
      - "8080:80"
    volumes:
      - ./nginx/api.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped  
    networks:
      - app-network
    depends_on:
      - api

  db:
    image: mysql:5.7
    container_name: api-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=emr2
      - MYSQL_USER=your_db_username
      - MYSQL_PASSWORD=your_db_password
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    container_name: api-redis
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "6379:6379" 

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: api-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: your_db_username
      PMA_PASSWORD: your_db_password
    ports:
      - "8081:80"
    networks:
      - app-network

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local

networks:
  app-network:
    driver: bridge
